variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  DOCKER_DRIVER: overlay2
  APP_PATH: /go/src/github.com/lackerman/serverbutler

before_script:
  - mkdir -p /go/src/github.com/lackerman/
  - ln -s $PWD ${APP_PATH}

stages:
  - test
  - release

build_test:
  stage: test
  image: golang
  script:
    - cd ${APP_PATH}
    - go get -u github.com/go-bindata/go-bindata/...
    - go generate ./...
    - go get ./...
    - go vet ./...
    - go test ./...
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bin/serverbutler -ldflags '-w -s'
  artifacts:
    paths:
     - bin/serverbutler

release:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_LATEST}
